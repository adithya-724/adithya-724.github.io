{"ast":null,"code":"var _jsxFileName = \"/home/azio724/Documents/React/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpensesItem from \"./ExpensesItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredItems = props.items.filter(item => {\n    return item.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesData = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"no-items\",\n    children: \"No items found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 22\n  }, this);\n\n  if (filteredItems.length > 0) {\n    expensesData = filteredItems.map(item => {\n      return /*#__PURE__*/_jsxDEV(ExpensesItem, {\n        date: item.date,\n        price: item.amount,\n        title: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      year: filteredYear,\n      onSaveFilterYear: filterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), expensesData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/azio724/Documents/React/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpensesItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterHandler","selectedYear","filteredItems","items","filter","item","date","getFullYear","toString","expensesData","length","map","amount","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,aAAa,GAAIC,YAAD,IAAkB;AACtCF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAGA,QAAMC,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAU;AACjD,WAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCV,YAA9C;AACD,GAFqB,CAAtB;;AAGA,MAAIW,YAAY,gBAAG;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;;AAEA,MAAIP,aAAa,CAACQ,MAAd,GAAuB,CAA3B,EAA8B;AAC5BD,IAAAA,YAAY,GAAGP,aAAa,CAACS,GAAd,CAAmBN,IAAD,IAAU;AACzC,0BACE,QAAC,YAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,QAAA,KAAK,EAAED,IAAI,CAACO,MAHd;AAIE,QAAA,KAAK,EAAEP,IAAI,CAACQ;AAJd,SACOR,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATc,CAAf;AAUD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEhB,YAAtB;AAAoC,MAAA,gBAAgB,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGS,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;GAAMb,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpensesItem from \"./ExpensesItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const filterHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredItems = props.items.filter((item) => {\n    return item.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesData = <p className=\"no-items\">No items found</p>;\n\n  if (filteredItems.length > 0) {\n    expensesData = filteredItems.map((item) => {\n      return (\n        <ExpensesItem\n          key={item.id}\n          date={item.date}\n          price={item.amount}\n          title={item.title}\n        />\n      );\n    });\n  }\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter year={filteredYear} onSaveFilterYear={filterHandler} />\n      {expensesData}\n    </Card>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}